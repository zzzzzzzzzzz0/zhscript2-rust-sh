#!/usr/lib/zhscript2-rust/l --。
赋予调试【顶】以。
定义提示、内容以下代码
	显示“# ‘内容’”换行。
上代码。
定义运行、命令、饶以下代码
	提示‘命令’。
	如果‘调试’那么返回。
	赋予错、错2以执行‘命令’。
	提示‘错’/‘错2’。
	如果‘错’并且不‘饶’那么结束10。
	‘错’
上代码。
定义行解以下代码
	调用‘命令行解析’、‘解’、‘参数栈’。
上代码。

加载lib/clpars4。
赋予解以调用‘命令行加回调’、、
	l、“执行“ls -lh --color””、0、、
	c、、0、下代码
显示下文本
	let lo:u64;
	let hi:u64;
	let f:f64;
	loop {
		unsafe {上文本循环【7】【-1】【次】先
			下文本
			if args2.len() == ‘次’ {
				asm!("call {}", in(reg) p上文本循环【‘次’】【第】先
						“, in("”分叉‘第’先
							1“rdi”。
							2“rsi”。
							3“rdx”。
							4“rcx”。
							5“r8”。
							6“r9”。
						了“") args2”[先算术‘第’-1了]
					了下文本,
					lateout("rax") lo, lateout("rdx") hi, lateout("xmm0") f);
				break
			}上文本。
		了下文本
		}
		return
	}
	*ret_low  = lo as usize;
	*ret_high = hi as usize;
	*ret_float = f;
上文本。
	上代码、
	r、“运行“cargo r””、0、、
	-h2、“赋予调试【顶】以1。”、0、、
	#、、h、。
调用‘命令行解析’、‘解’、‘参数栈’。
